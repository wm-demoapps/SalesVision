/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.salesvision.salesvision;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Badges generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`BADGES`")
public class Badges implements Serializable {

    private Integer id;
    private String badgename;
    private String badgeicon;
    private Integer repid;
    private String receivedDate;
    private Reps reps;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`BADGENAME`", nullable = true, length = 255)
    public String getBadgename() {
        return this.badgename;
    }

    public void setBadgename(String badgename) {
        this.badgename = badgename;
    }

    @Column(name = "`BADGEICON`", nullable = true, length = 255)
    public String getBadgeicon() {
        return this.badgeicon;
    }

    public void setBadgeicon(String badgeicon) {
        this.badgeicon = badgeicon;
    }

    @Column(name = "`REPID`", nullable = true, scale = 0, precision = 10)
    public Integer getRepid() {
        return this.repid;
    }

    public void setRepid(Integer repid) {
        this.repid = repid;
    }

    @Column(name = "`RECEIVED_DATE`", nullable = true, length = 255)
    public String getReceivedDate() {
        return this.receivedDate;
    }

    public void setReceivedDate(String receivedDate) {
        this.receivedDate = receivedDate;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`REPID`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_BADGES_TO_REPS_REPID_ID`"))
    @Fetch(FetchMode.JOIN)
    public Reps getReps() {
        return this.reps;
    }

    public void setReps(Reps reps) {
        if(reps != null) {
            this.repid = reps.getId();
        }

        this.reps = reps;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Badges)) return false;
        final Badges badges = (Badges) o;
        return Objects.equals(getId(), badges.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
